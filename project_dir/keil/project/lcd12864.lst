C51 COMPILER V9.00   LCD12864                                                              01/04/2020 17:21:38 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN ..\object\lcd12864.obj
COMPILER INVOKED BY: D:\Program Files\KEILC51\files\C51\BIN\C51.EXE ..\..\drivers\lcd12864\lcd12864.c BROWSE DEBUG OBJEC
                    -TEXTEND PRINT(.\lcd12864.lst) TABS(2) OBJECT(..\object\lcd12864.obj)

line level    source

   1          /**
   2            ******************************************************************************
   3            * @file     lcd12864.c
   4            * @author   ZRT
   5            * @version  V1.0
   6            * @date     2019/12/30
   7            * @brief    HDG12864F-3
   8            ******************************************************************************  
   9            * 
  10            * 
  11            ******************************************************************************
  12            */
  13          
  14          /*-- includes ----------------------------------------------------------------*/
  15          #include "./lcd12864.h"
  16          
  17          
  18          /*-- defined -----------------------------------------------------------------*/
  19          #define            LCD_WIDTH                    128 
  20          #define            LCD_HIGH                     64    
  21          
  22          #define            LCD_LINE_DOT                 8
  23          
  24          
  25          
  26          #define            LCD12864_E                    P2_3     /* Enable clock input. */
  27          #define            LCD12864_RW                   P2_2     /* Signal select to read and write. */
  28          #define            LCD12864_A0                   P2_1     /* Control/Data select signal */
  29          #define            LCD12864_REST                 P2_0     /* Reset signal. */
  30          
  31          #define            LCD12864_DAT                  P0
  32          #define            LCD12864_BUSY_BIT             P0_7
  33          
  34          
  35          static    void   delay_us(u8_t t);
  36          
  37          
  38          
  39          #define            DELAY_US(us)           delay_us(us)
  40          
  41          
  42          #define DISPLAY_ON()           lcd12864_write(OPS_COM, 0xaf)   // Display on, 显示开 
  43          #define DISPLAY_OFF()          lcd12864_write(OPS_COM, 0xae)   // Display off,显示关
  44          
  45          
  46          
  47          /*-- typedef -----------------------------------------------------------------*/
  48          typedef    enum
  49          {
  50            OPS_COM  =  (u8_t)0,
  51            OPS_DAT  =  1,
  52          }DI_OpsType;
  53          
  54          
C51 COMPILER V9.00   LCD12864                                                              01/04/2020 17:21:38 PAGE 2   

  55          
  56          /*-- private variables -------------------------------------------------------*/
  57          
  58          
  59          
  60          
  61          
  62          /*-- functions ---------------------------------------------------------------*/
  63          
  64          static  void delay_us(u8_t t)
  65          {
  66   1        while(t--);
  67   1      }
  68          
  69          
  70          
  71          /**           
  72            * @brief            
  73            * @param    
  74            * @return  
  75            * @note
  76            */
  77          static void lcd12864_check_busy(void)
  78          {
  79   1        do
  80   1        {
  81   2          LCD12864_E = 0;
  82   2          LCD12864_A0 = 0;
  83   2          LCD12864_RW = 1;   
  84   2          DELAY_US(10); /* us */
  85   2          LCD12864_E = 1;
  86   2          DELAY_US(10); /* us */
  87   2        }while(LCD12864_BUSY_BIT == 1);
  88   1      }
  89          
  90          /**           
  91            * @brief            
  92            * @param    
  93            * @return  
  94            * @note
  95            */
  96          static  void  lcd12864_write(DI_OpsType type, u8_t dat)
  97          {
  98   1        lcd12864_check_busy();
  99   1      
 100   1        LCD12864_E = 0;     /* Enable pin */
 101   1      
 102   1        LCD12864_RW = 0;    /* Write mode. */
 103   1      
 104   1        if(type == OPS_COM)
 105   1        {
 106   2          LCD12864_A0 = 0;  /* Instruction operation. */  
 107   2        }
 108   1        else if(type == OPS_DAT)
 109   1        {
 110   2          LCD12864_A0 = 1;    /* Data operation. */
 111   2        }
 112   1      
 113   1        DELAY_US(10); /* us */
 114   1      
 115   1        LCD12864_DAT = dat;
 116   1      
C51 COMPILER V9.00   LCD12864                                                              01/04/2020 17:21:38 PAGE 3   

 117   1        DELAY_US(10); /* us */
 118   1      
 119   1        LCD12864_E = 1;   /* Start write data, rise edge to write data. */
 120   1      
 121   1        DELAY_US(10); /* Wait for write finish. */
 122   1      }
 123          
 124          
 125          
 126          /**           
 127            * @brief     LCD Line base address setting.       
 128            * @param    
 129            * @return  
 130            * @note
 131            */
 132          static void lcd12864_set_page_address(u8_t addr)
 133          {
 134   1        addr = 0xb0|addr;       
 135   1        lcd12864_write(OPS_COM, addr); /* Total page = 8 pages(lines) */
 136   1      }
 137          
 138          
 139          
 140          /**           
 141            * @brief     LCD column base address setting.       
 142                         列地址分成两部分（高四位和低四位）写入，显示 RAM 每访问一次，列地址自动加一
 143                         The column address is written in two parts (high four bits and low four bits), 
 144                         showing that the column address is automatically added to each RAM access
 145            * @param    
 146            * @return  
 147            * @note
 148            */
 149          static void lcd12864_set_column_address(u8_t addr)
 150          {
 151   1        lcd12864_write(OPS_COM, 0x10|(0x0f&(addr>>4)));  /* 取出高四位00001111. Take out the high four bits 0000
             -1111 */
 152   1        lcd12864_write(OPS_COM, 0x0f&addr);  /* 取出低四位. Take out the low four bits */
 153   1      }
 154          
 155          
 156          /**           
 157            * @brief            
 158            * @param    
 159            * @return  
 160            * @note
 161            */
 162          void  lcd12864_init(void)
 163          {
 164   1      //  /* Reset the lcd */
 165   1      //  LCD12864_REST = 0;
 166   1      //  DELAY_US(3000);
 167   1        LCD12864_REST = 1;
 168   1      //  DELAY_US(2000);
 169   1      
 170   1        /* Initialize. */
 171   1        lcd12864_write(OPS_COM, 0xc8);
 172   1        lcd12864_write(OPS_COM, 0xa1);
 173   1        lcd12864_write(OPS_COM, 0xa6);
 174   1        //DISPLAY_ON();
 175   1      }
 176          
 177          
C51 COMPILER V9.00   LCD12864                                                              01/04/2020 17:21:38 PAGE 4   

 178          
 179          /**           
 180            * @brief      
 181            * @param    
 182            * @return  
 183            * @note
 184            */
 185          void  lcd12864_clear_screen(u8_t value)
 186          {
 187   1        u8_t i = 0;
 188   1        u8_t j = 0;
 189   1      
 190   1        for(i=0; i<(LCD_HIGH/LCD_LINE_DOT); i++)
 191   1        {
 192   2          lcd12864_set_page_address(i);
 193   2          lcd12864_set_column_address(0);
 194   2          for(j=0; j<LCD_WIDTH; j++)
 195   2          {
 196   3            lcd12864_write(OPS_DAT, value);
 197   3          }
 198   2        }
 199   1      }
 200          
 201          
 202          /**           
 203            * @brief            
 204            * @param    
 205            * @return  
 206            * @note
 207            */
 208          void show_pic(u8_t* address)//显示图片函数
 209          {                                         //address是是指向数组的指针，用法：show_Pic（XY）当中XY为数组名
 210   1        u8_t i,j,k; 
 211   1      
 212   1        lcd12864_write(OPS_COM, 0x34);        //打开扩展指令集
 213   1        i = 0x80;           
 214   1        for(j = 0;j < 32;j++)
 215   1        {
 216   2            lcd12864_write(OPS_COM, i++);
 217   2            lcd12864_write(OPS_COM, 0x80);  
 218   2            for(k = 0 ;k < 16;k++)
 219   2            {
 220   3                lcd12864_write(OPS_DAT, *address++);
 221   3            }
 222   2          //ptr += 16;
 223   2          
 224   2        }
 225   1        i = 0x80; 
 226   1        for(j = 0;j < 32;j++)
 227   1        {
 228   2           lcd12864_write(OPS_COM, i++);
 229   2           lcd12864_write(OPS_COM, 0x88);     
 230   2            for(k = 0 ;k < 16;k++)
 231   2            {
 232   3                lcd12864_write(OPS_DAT, *address++);
 233   3            } 
 234   2          //ptr += 16;
 235   2        }  
 236   1        lcd12864_write(OPS_COM, 0x36);        //打开绘图显示
 237   1        lcd12864_write(OPS_COM, 0x30);        //回到基本指令集
 238   1      
 239   1      }
C51 COMPILER V9.00   LCD12864                                                              01/04/2020 17:21:38 PAGE 5   

 240          
 241          /*---------------------- end of file -----------------------------------------*/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    309    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
